name: Deploy to Amazon Linux 2023

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Create deployment archive
        run: |
          tar -czf deployment.tar.gz \
            dist/ \
            package.json \
            package-lock.json \
            node_modules/ \
            uploads/ \
            drizzle.config.ts \
            shared/ \
            server/ \
            --exclude=node_modules/.cache

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          APP_DIR: ${{ secrets.APP_DIR || '/home/ec2-user/app' }}
        run: |
          # Copy deployment archive to server
          scp -i private_key.pem \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            deployment.tar.gz ${EC2_USER}@${EC2_HOST}:~/

          # Deploy on server
          ssh -i private_key.pem \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            ${EC2_USER}@${EC2_HOST} << 'ENDSSH'
            
            # Create app directory if it doesn't exist
            mkdir -p ${APP_DIR}
            
            # Extract deployment archive
            cd ${APP_DIR}
            tar -xzf ~/deployment.tar.gz
            rm ~/deployment.tar.gz
                     
            # Install production dependencies
            npm ci --omit=dev
            
            # Run database migrations
            npm run db:push
            
            # Restart application with PM2
            if command -v pm2 &> /dev/null; then
              pm2 delete app || true
              pm2 start npm --name "app" -- start
              pm2 save
            else
              echo "PM2 not found. Please install PM2 or use another process manager."
              exit 1
            fi
            
            echo "Deployment completed successfully!"
            ENDSSH

      - name: Cleanup
        if: always()
        run: |
          rm -f private_key.pem deployment.tar.gz

      - name: Verify deployment
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -i private_key.pem \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            ${EC2_USER}@${EC2_HOST} << 'ENDSSH'
            pm2 status
            ENDSSH
