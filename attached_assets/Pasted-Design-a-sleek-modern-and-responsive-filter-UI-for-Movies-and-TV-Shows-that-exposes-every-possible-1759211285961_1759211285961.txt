Design a sleek, modern, and responsive filter UI for Movies and TV Shows that exposes every possible filter option available through TMDB’s Discover API, styled with a dark, premium aesthetic using clean typography, pill toggles, chips, sliders, and provider logos. At the top, include a Type selector (Movie / TV) mapped to /discover/movie or /discover/tv. Add Genres as multi-select chips with include (with_genres) and exclude (without_genres) modes, and a Keywords autocomplete with tags for include (with_keywords) and exclude (without_keywords). Provide People search with autocomplete (cast: with_cast, crew: with_crew, combined: with_people) and Companies (with_companies) plus Networks (with_networks for TV). For Dates, support both ranges and exact year filters: Movies → primary_release_date.gte|lte, release_date.gte|lte, primary_release_year; TV → first_air_date.gte|lte, air_date.gte|lte, first_air_date_year, and timezone. Add quick-access chips like “This Year” and decade shortcuts. Include Runtime sliders (with_runtime.gte|lte), User Rating sliders (vote_average.gte|lte), and Vote Count range (vote_count.gte|lte). Show Language (language response), Original Language (with_original_language), and Region (region). Expose Certification filters for Movies: certification_country, certification, certification.lte, and toggle for Adult content (include_adult). Add Availability controls: Movies → with_release_type (Premiere, Theatrical, Digital, Physical, TV, Streaming); TV → screened_theatrically. For Providers, design a logo grid with multi-select (with_watch_providers), tied to Region (watch_region), plus monetization toggles (with_watch_monetization_types = flatrate, free, ads, rent, buy). Sorting should be prominent and sticky (sort_by) with all TMDB-supported options: popularity, release/air dates, revenue, original title/name, vote average, and vote count. Every filter selection should appear as a removable chip in an “Active Filters” bar, with a persistent “Clear all.” All changes must sync to query params for deep linking, support presets, and display a live result count from TMDB’s total_results. The UI should handle empty, error, and loading states gracefully, be fully accessible (ARIA, keyboard-first, reduced motion, high contrast), and remain consistent across desktop and mobile with bottom-sheet behavior on smaller screens. This design should make the full TMDB filter space discoverable while keeping the experience intuitive, polished, and production-ready.